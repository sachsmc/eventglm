[{"path":"https://sachsmc.github.io/eventglm/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://sachsmc.github.io/eventglm/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://sachsmc.github.io/eventglm/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://sachsmc.github.io/eventglm/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://sachsmc.github.io/eventglm/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://sachsmc.github.io/eventglm/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://sachsmc.github.io/eventglm/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://sachsmc.github.io/eventglm/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://sachsmc.github.io/eventglm/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://sachsmc.github.io/eventglm/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://sachsmc.github.io/eventglm/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://sachsmc.github.io/eventglm/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://sachsmc.github.io/eventglm/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://sachsmc.github.io/eventglm/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://sachsmc.github.io/eventglm/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://sachsmc.github.io/eventglm/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://sachsmc.github.io/eventglm/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://sachsmc.github.io/eventglm/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://sachsmc.github.io/eventglm/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://sachsmc.github.io/eventglm/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://sachsmc.github.io/eventglm/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) 2020 Michael C Sachs  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. eventglm Copyright (C) 2020 Michael C Sachs This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://sachsmc.github.io/eventglm/articles/example-analysis.html","id":"colon-cancer-treatment-and-time-to-death-standard-survival","dir":"Articles","previous_headings":"","what":"Colon cancer treatment and time to death (standard survival)","title":"Examples of using eventglm and interpreting the results","text":"first example concerns colon dataset, included package: randomized trial, main interest comparing distributions time death three treatment arms. Let’s start survival curve.  know, hazard ratios difficult interpret causal effects, even randomized controlled trials. Better options summarizing effect treatment survival particular time, restricted mean survival given time. Let’s compare survival 7 years, 2500 days since registration.  figure , plot survival curve observation group. vertical dotted line time interest (tmax = 2500 days). open point estimated survival probability time tmax, .e., P(T>tmax)P(T > tmax) shaded area represents restricted mean survival tmax, .e., E{min(T,tmax)}=∫0tmaxP(T>u)duE\\{\\min(T, tmax)\\} = \\int_0^{tmax} P(T > u) \\, du. can estimate things using survival package: can now inference using eventglm package. First, fit regression model cumulative incidence, 1 - survival: find compared observation alone, Levamisole alone treatment group -0.03 difference cumulative incidence death 2500 days, 95% confidence interval -0.11, 0.05, Levamisole plus 5-FU group -0.13 difference cumulative incidence death 2500 days, 95% confidence interval -0.21, -0.05. roughly agrees Kaplan-Meier estimates survfit : can fit another model using log link obtain estimates log relative risks comparing active treatment arms observation arm: find estimated probability death 2500 days Levamisole alone arm 0.95 times lower compared observation 95% confidence interval 0.81, 1.1 estimated probability death 2500 days Levamisole+5FU arm 0.76 times lower compared observation 95% confidence interval 0.63, 0.9. odds ratios interest, link = \"logit\" option can used instead. Another interesting option link = \"cloglog\": complementary log log link cumulative incidence implies proportional hazards. Thus models using cloglog link applied various time points can used assess proportional hazards assumption (Perme Andersen 2008). options link functions probit, inverse, μ−2\\mu^{-2}, square root, users can define custom link function. immediately clear interpretation regression coefficients cases, possible. See stats::family help file details. Now restricted mean: find compared observation alone, Levamisole alone treatment group -6.07 difference mean time death 2500 days, 95% confidence interval -146.68, 134.53, Levamisole plus 5-FU group 194.95 difference mean time death 2500 days, 95% confidence interval 56.78, 333.13. , roughly agrees Kaplan-Meier estimates survfit : key advantage regression approach gives us ability adjust model covariates. example, since randomized trial, know covariates independent treatment assignment. However, several variables associated time death, case called “precision variables”. expect adjusting age, number positive lymph nodes (4) models reduce standard error estimates treatment effects, without changing coefficient estimates. Let’s find : estimates don’t change (much) standard errors reduce 5%.","code":"?eventglm::colon sfit <- survfit(Surv(time, status) ~ rx, data = colon) plot(sfit, col = c(\"black\", \"slateblue\", \"salmon\"),       xlab = \"days since registration\", ylab = \"survival\") legend(\"bottomleft\", fill = c(\"black\", \"slateblue\", \"salmon\"),         legend = names(sfit$strata)) plot(sfit[1], conf.int = FALSE, xlab = \"days since registration\", ylab = \"survival\")  seg0 <- summary(sfit[1], times = sfit[1]$time[sfit[1]$time <= 2500]) rect(c(0, seg0$time), 0, c(seg0$time, 2500), c(seg0$surv),       border = NA, col = \"grey80\") lines(sfit[1], conf.int = FALSE) abline(v = 2500, lty = 2) points(x = 2500, y = summary(sfit[1], times = 2500)$surv) colon.sfit <- summary(sfit, times = 2500, rmean = 2500) colon.sfit #> Call: survfit(formula = Surv(time, status) ~ rx, data = colon) #>  #>                 rx=Obs  #>         time       n.risk      n.event     survival      std.err lower 95% CI  #>     2.50e+03     5.00e+01     1.65e+02     4.55e-01     2.98e-02     4.00e-01  #> upper 95% CI  #>     5.18e-01  #>  #>                 rx=Lev  #>         time       n.risk      n.event     survival      std.err lower 95% CI  #>     2.50e+03     5.80e+01     1.57e+02     4.85e-01     2.92e-02     4.31e-01  #> upper 95% CI  #>     5.46e-01  #>  #>                 rx=Lev+5FU  #>         time       n.risk      n.event     survival      std.err lower 95% CI  #>     2.50e+03     6.50e+01     1.21e+02     5.88e-01     2.96e-02     5.33e-01  #> upper 95% CI  #>     6.49e-01 colon.cifit <- cumincglm(Surv(time, status) ~ rx, time = 2500, data = colon) summary(colon.cifit) #>  #> Call: #> cumincglm(formula = Surv(time, status) ~ rx, time = 2500, data = colon) #>  #> Coefficients: #>             Estimate Std. Error z value Pr(>|z|)     #> (Intercept)  0.54345    0.02946  18.449  < 2e-16 *** #> rxLev       -0.02907    0.04173  -0.697  0.48596     #> rxLev+5FU   -0.13176    0.04186  -3.148  0.00165 **  #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> (Dispersion parameter for quasi family taken to be 1) #>  #>     Null deviance: 253.10  on 928  degrees of freedom #> Residual deviance: 250.15  on 926  degrees of freedom #> AIC: NA #>  #> Number of Fisher Scoring iterations: 2 se.ci <- sqrt(diag(vcov(colon.cifit, type = \"robust\"))) b.ci <- coefficients(colon.cifit) conf.ci <- confint(colon.cifit) cbind(eventglm = b.ci,        survfit = c(1 - colon.sfit$surv[1],    (1 - colon.sfit$surv[2:3]) -      (1 - rep(colon.sfit$surv[1], 2)))) #>                eventglm     survfit #> (Intercept)  0.54345139  0.54479221 #> rxLev       -0.02907499 -0.02990601 #> rxLev+5FU   -0.13175778 -0.13301654 colon.rr <- cumincglm(Surv(time, status) ~ rx, time = 2500,                        data = colon, link = \"log\") br.ci <- coefficients(colon.rr) confr.ci <- confint(colon.rr) colon.rmfit <- rmeanglm(Surv(time, status) ~ rx, time = 2500, data = colon) summary(colon.rmfit) #>  #> Call: #> rmeanglm(formula = Surv(time, status) ~ rx, time = 2500, data = colon) #>  #> Coefficients: #>             Estimate Std. Error z value Pr(>|z|)     #> (Intercept) 1667.403     49.949  33.382  < 2e-16 *** #> rxLev         -6.074     71.739  -0.085  0.93253     #> rxLev+5FU    194.954     70.498   2.765  0.00569 **  #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> (Dispersion parameter for quasi family taken to be 1) #>  #>     Null deviance: 734414066  on 928  degrees of freedom #> Residual deviance: 726392934  on 926  degrees of freedom #> AIC: NA #>  #> Number of Fisher Scoring iterations: 2 se.rm <- sqrt(diag(vcov(colon.rmfit, type = \"robust\"))) b.rm <- coefficients(colon.rmfit) conf.rm <- confint(colon.rmfit) cbind(eventglm = b.rm,        survfit = c(colon.sfit$table[1, 5],  colon.sfit$table[2:3, 5] - colon.sfit$table[1, 5])) #>               eventglm     survfit #> (Intercept) 1667.40308 1666.948078 #> rxLev         -6.07367   -5.708803 #> rxLev+5FU    194.95446  195.313754 colon.ci.adj <- cumincglm(Surv(time, status) ~ rx + age + node4, time = 2500, data = colon) colon.rm.adj <- rmeanglm(Surv(time, status) ~ rx + age + node4, time = 2500, data = colon) summary(colon.rm.adj) #>  #> Call: #> rmeanglm(formula = Surv(time, status) ~ rx + age + node4, time = 2500,  #>     data = colon) #>  #> Coefficients: #>             Estimate Std. Error z value Pr(>|z|)     #> (Intercept) 2067.576    151.579  13.640  < 2e-16 *** #> rxLev          3.421     67.516   0.051  0.95958     #> rxLev+5FU    185.349     67.365   2.751  0.00593 **  #> age           -3.735      2.391  -1.562  0.11824     #> node4       -644.960     64.854  -9.945  < 2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> (Dispersion parameter for quasi family taken to be 1) #>  #>     Null deviance: 734414066  on 928  degrees of freedom #> Residual deviance: 650039827  on 924  degrees of freedom #> AIC: NA #>  #> Number of Fisher Scoring iterations: 2"},{"path":"https://sachsmc.github.io/eventglm/articles/example-analysis.html","id":"models-for-survival","dir":"Articles","previous_headings":"Colon cancer treatment and time to death (standard survival)","what":"Models for survival","title":"Examples of using eventglm and interpreting the results","text":"like model survival equal one minus cumulative incidence, straightforward. can simply use survival = TRUE option:","code":"cumincglm(Surv(time, status) ~ rx, time = 2500,                        data = colon, survival = TRUE) #>  #> Call:  cumincglm(formula = Surv(time, status) ~ rx, time = 2500, data = colon,  #>     survival = TRUE) #>  #>  #> Model for the identity survival at time 2500  #>  #> Coefficients: #> (Intercept)        rxLev    rxLev+5FU   #>     0.45655      0.02907      0.13176   #>  #> Degrees of Freedom: 928 Total (i.e. Null);  926 Residual"},{"path":"https://sachsmc.github.io/eventglm/articles/example-analysis.html","id":"multiple-time-points-new-in-version-1-2-0","dir":"Articles","previous_headings":"Colon cancer treatment and time to death (standard survival)","what":"Multiple time points (New in version 1.2.0)","title":"Examples of using eventglm and interpreting the results","text":"Now can specify vector times cumincglm get model assumes effect covariate constant times. model, intercept survival probability Obs arm time 500 (reference time). terms labeled factor(pseudo.time)t represent change intercept associated time t. , example, survival probability Obs arm time 1000 0.83 + -0.17 = 0.66. Looking survival curves figure , assumption constant treatment effect survival difference scale may questionable. can allow covariate effects time dependent wrapping special term tve() right side formula. Now coefficients labeled factor(pseudo.time)t:Covariate represent covariate effect time t. , example, difference survival probabilities Levamisole plus 5-FU Observation time 1500 Compare estimate survfit: key advantage regression approach can adjust covariates, inference directly, flexible models. tve term allows mix time-varying time-constant effects. Just apply covariate want time-varying.","code":"mvtfit1 <- cumincglm(Surv(time, status) ~ rx,          time = c(500, 1000, 1500, 2000, 2500),         data = colon, survival = TRUE) summary(mvtfit1) #>  #> Call: #> cumincglm(formula = Surv(time, status) ~ rx, time = c(500, 1000,  #>     1500, 2000, 2500), data = colon, survival = TRUE) #>  #> Coefficients: #>                          Estimate Std. Error z value Pr(>|z|)     #> (Intercept)              0.829127   0.021793  38.046  < 2e-16 *** #> factor(pseudo.time)1000 -0.170283   0.012340 -13.800  < 2e-16 *** #> factor(pseudo.time)1500 -0.263039   0.014456 -18.196  < 2e-16 *** #> factor(pseudo.time)2000 -0.314852   0.015290 -20.592  < 2e-16 *** #> factor(pseudo.time)2500 -0.351750   0.016423 -21.419  < 2e-16 *** #> rxLev                    0.003942   0.032530   0.121  0.90355     #> rxLev+5FU                0.093737   0.031979   2.931  0.00338 **  #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> (Dispersion parameter for quasi family taken to be 1) #>  #>     Null deviance: 1091.5  on 4644  degrees of freedom #> Residual deviance: 1009.4  on 4638  degrees of freedom #> AIC: NA #>  #> Number of Fisher Scoring iterations: 2 mvtfit2 <- cumincglm(Surv(time, status) ~ tve(rx),          time = c(500, 1000, 1500, 2000, 2500),         data = colon, survival = TRUE) summary(mvtfit2) #>  #> Call: #> cumincglm(formula = Surv(time, status) ~ tve(rx), time = c(500,  #>     1000, 1500, 2000, 2500), data = colon, survival = TRUE) #>  #> Coefficients: #>                                    Estimate Std. Error z value Pr(>|z|)     #> (Intercept)                        0.850710   0.020078  42.370  < 2e-16 *** #> factor(pseudo.time)1000           -0.178401   0.021560  -8.275  < 2e-16 *** #> factor(pseudo.time)1500           -0.289898   0.025561 -11.341  < 2e-16 *** #> factor(pseudo.time)2000           -0.345379   0.026875 -12.851  < 2e-16 *** #> factor(pseudo.time)2500           -0.394161   0.028857 -13.659  < 2e-16 *** #> factor(pseudo.time)500:rxLev       0.004138   0.028347   0.146  0.88395     #> factor(pseudo.time)1000:rxLev     -0.017500   0.037805  -0.463  0.64343     #> factor(pseudo.time)1500:rxLev     -0.002754   0.039739  -0.069  0.94474     #> factor(pseudo.time)2000:rxLev      0.006751   0.040132   0.168  0.86641     #> factor(pseudo.time)2500:rxLev      0.029075   0.041596   0.699  0.48456     #> factor(pseudo.time)500:rxLev+5FU   0.027581   0.027476   1.004  0.31546     #> factor(pseudo.time)1000:rxLev+5FU  0.074455   0.036360   2.048  0.04059 *   #> factor(pseudo.time)1500:rxLev+5FU  0.116689   0.038753   3.011  0.00260 **  #> factor(pseudo.time)2000:rxLev+5FU  0.118203   0.039667   2.980  0.00288 **  #> factor(pseudo.time)2500:rxLev+5FU  0.131758   0.041722   3.158  0.00159 **  #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> (Dispersion parameter for quasi family taken to be 1) #>  #>     Null deviance: 1091.5  on 4644  degrees of freedom #> Residual deviance: 1007.9  on 4630  degrees of freedom #> AIC: NA #>  #> Number of Fisher Scoring iterations: 2 round(summary(mvtfit2)$coefficients[13,, drop = FALSE],2) #>                                   Estimate Std. Error z value Pr(>|z|) #> factor(pseudo.time)1500:rxLev+5FU     0.12       0.04    3.01        0 round(summary(sfit, times = 1500)$surv[3] -    summary(sfit, times = 1500)$surv[1], 2) #> [1] 0.12"},{"path":"https://sachsmc.github.io/eventglm/articles/example-analysis.html","id":"censoring-assumptions","dir":"Articles","previous_headings":"","what":"Censoring assumptions","title":"Examples of using eventglm and interpreting the results","text":"default, assume time censoring independent time event, covariates model. restrictive parametric survival models, Cox regression, assumes censoring time conditionally independent event time given covariates model. provide several options relax assumption using model.censoring formula.censoring options. first compute stratified pseudo observations, assumes censoring independent given set categorical covariates: Next, can assume time censoring follows Cox model given set covariates. default, covariate formula (right hand side) main model used, formula can specified. can also use Aalens additive hazards model instead Cox model censoring distribution. inverse probability censoring weighted pseudo observations used (Overgaard, Parner, Pedersen 2019). According simulation study, stratified option works quite well even censoring model misspecified, Aalen additive model tends work better Cox model. models, IPCW weights returned element called “ipcw.weights”. multiple time points, matrix one column per time point.","code":"colon.ci.cen1 <- cumincglm(Surv(time, status) ~ rx + age + node4, time = 2500,                             data = colon, model.censoring = \"stratified\",                             formula.censoring = ~ rx) colon.ci.cen2 <- cumincglm(Surv(time, status) ~ rx + age + node4, time = 2500,                             data = colon, model.censoring = \"coxph\",                             formula.censoring = ~ rx + age + node4) colon.ci.cen3 <- cumincglm(Surv(time, status) ~ rx + age + node4, time = 2500,                             data = colon, model.censoring = \"aareg\",                             formula.censoring = ~ rx + age + node4)  round(cbind(\"indep\" = coef(colon.ci.adj),   \"strat\" = coef(colon.ci.cen1),   \"coxipcw\" = coef(colon.ci.cen2),   \"aalenipcw\" = coef(colon.ci.cen3)), 3) #>              indep  strat coxipcw aalenipcw #> (Intercept)  0.318  0.314   0.310     0.320 #> rxLev       -0.034 -0.035  -0.034    -0.036 #> rxLev+5FU   -0.127 -0.128  -0.127    -0.127 #> age          0.002  0.002   0.002     0.002 #> node4        0.332  0.334   0.335     0.334 colon.ci.cen2b <- cumincglm(Surv(time, status) ~ rx + age + node4,                              time = c(500, 1000, 2500),                             data = colon, model.censoring = \"coxph\",                             formula.censoring = ~ rx + age + node4)  head(colon.ci.cen2b$ipcw.weights) #>           [,1]      [,2]      [,3] #> [1,] 0.9988156 0.9988156 0.9936251 #> [2,] 0.9988733 0.9988733 0.3867807 #> [3,] 0.9983923 0.9983923 0.9983923 #> [4,] 1.0000000 1.0000000 1.0000000 #> [5,] 0.9984112 0.9984112 0.9984112 #> [6,] 0.9987135 0.9987135 0.9911426 summary(colon.ci.cen2b$ipcw.weights) #>        V1               V2               V3         #>  Min.   :0.9983   Min.   :0.9983   Min.   :0.2702   #>  1st Qu.:0.9987   1st Qu.:0.9987   1st Qu.:0.4832   #>  Median :0.9988   Median :0.9988   Median :0.9094   #>  Mean   :0.9989   Mean   :0.9989   Mean   :0.7680   #>  3rd Qu.:0.9989   3rd Qu.:0.9989   3rd Qu.:0.9988   #>  Max.   :1.0000   Max.   :1.0000   Max.   :1.0000"},{"path":"https://sachsmc.github.io/eventglm/articles/example-analysis.html","id":"monoclonal-gammopathy-data-competing-risks","dir":"Articles","previous_headings":"","what":"Monoclonal gammopathy data (Competing risks)","title":"Examples of using eventglm and interpreting the results","text":"next example involves mgus2 dataset, included package: dataset number covariates, time progression plasma cell malignancy (PCM), death. event PCM primary interest, death competing event. data described analyzed survival vignette (section 2.3.2):  can get similar estimates cumulative incidence pcm 10 years expected lifetime lost due pcm 10 years similar commands . Note cause option specify cause interest. Sex may important predictor time pcm, variables? objects returned cumincglm rmeanglm inherit glm, many methods available. First, vcov function several options calculation estimated variance estimated regression parameters. default, robust variance estimates used, based Huber-White estimator. options naive, corrected, corrected estimators suggested Overgaard et al. (2017) based second order Von-Mises expansion. can also use bootstrap. recalculated pseudo-observations every time, still pretty fast C code. Let’s compare: corrected estimator fails pretty often, doesn’t handle ties, benefits negligible, thus may removed package future. Residuals also work, using scaling factor suggested Perme Andersen (2008), predictions. Predicted restricted means give possible method predict individual event times, predicted cumulative incidence probabilities. Note identity link, predicted cumulative incidence guaranteed 0 1.","code":"## ?mgus2 head(mgus2) #>   id age sex dxyr  hgb creat mspike ptime pstat futime death etime event #> 1  1  88   F 1981 13.1   1.3    0.5    30     0     30     1    30 death #> 2  2  78   F 1968 11.5   1.2    2.0    25     0     25     1    25 death #> 3  3  94   M 1980 10.5   1.5    2.6    46     0     46     1    46 death #> 4  4  68   M 1977 15.2   1.2    1.2    92     0     92     1    92 death #> 5  5  90   F 1973 10.7   0.8    1.0     8     0      8     1     8 death #> 6  6  90   M 1990 12.9   1.0    0.5     4     0      4     1     4 death crfit <- survfit(Surv(etime, event) ~ sex, eventglm::mgus2) summary(crfit, times = 120) #> Call: survfit(formula = Surv(etime, event) ~ sex, data = eventglm::mgus2) #>  #>                 sex=F  #>      time    n.risk   n.event  Pr((s0))   Pr(pcm) Pr(death)  #>  120.0000  214.0000  331.0000    0.4456    0.0739    0.4805  #>  #>                 sex=M  #>      time    n.risk   n.event  Pr((s0))   Pr(pcm) Pr(death)  #>  120.0000  210.0000  450.0000    0.3695    0.0553    0.5752 print(crfit, rmean = 120) #> Call: survfit(formula = Surv(etime, event) ~ sex, data = eventglm::mgus2) #>  #>                n nevent     rmean se(rmean)* #> sex=F, (s0)  631      0 82.983485  1.7271783 #> sex=M, (s0)  753      0 74.808346  1.6335337 #> sex=F, pcm   631     59  4.794595  0.7864984 #> sex=M, pcm   753     56  3.501305  0.5992326 #> sex=F, death 631    370 32.221921  1.6903651 #> sex=M, death 753    490 41.690349  1.6431335 #>    *restricted mean time in state (max time = 120 )  plot(crfit, col=1:2,  noplot=\"\",      lty=c(3,3,2,2,1,1), lwd=2, xscale=12,      xlab=\"Years post diagnosis\", ylab=\"P(state)\") legend(240, .65, c(\"Female, death\", \"Male, death\", \"malignancy\", \"(s0)\"),        lty=c(1,1,2,3), col=c(1,2,1,1), bty='n', lwd=2) abline(v = 120, lty = 2) mgfitci <- cumincglm(Surv(etime, event) ~ sex, cause = \"pcm\", time = 120,                     data = mgus2) summary(mgfitci) #>  #> Call: #> cumincglm(formula = Surv(etime, event) ~ sex, time = 120, cause = \"pcm\",  #>     data = mgus2) #>  #> Coefficients: #>             Estimate Std. Error z value Pr(>|z|)     #> (Intercept)  0.07383    0.01086   6.800 1.04e-11 *** #> sexM        -0.01857    0.01384  -1.342     0.18     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> (Dispersion parameter for quasi family taken to be 1) #>  #>     Null deviance: 88.507  on 1383  degrees of freedom #> Residual deviance: 88.388  on 1382  degrees of freedom #> AIC: NA #>  #> Number of Fisher Scoring iterations: 2  mgfitrmean <- rmeanglm(Surv(etime, event) ~ sex, cause = \"pcm\", time = 120,                         data = mgus2) summary(mgfitrmean) #>  #> Call: #> rmeanglm(formula = Surv(etime, event) ~ sex, time = 120, cause = \"pcm\",  #>     data = mgus2) #>  #> Coefficients: #>             Estimate Std. Error z value Pr(>|z|)     #> (Intercept)   4.7926     0.7883   6.080  1.2e-09 *** #> sexM         -1.2929     0.9902  -1.306    0.192     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> (Dispersion parameter for quasi family taken to be 1) #>  #>     Null deviance: 450225  on 1383  degrees of freedom #> Residual deviance: 449652  on 1382  degrees of freedom #> AIC: NA #>  #> Number of Fisher Scoring iterations: 2 mgfitci2 <- cumincglm(Surv(etime, event) ~ sex + age + hgb, cause = \"pcm\",                        time = 120, data = mgus2) mgfitrmean2 <- rmeanglm(Surv(etime, event) ~ sex + age + hgb, cause = \"pcm\",                        time = 120, data = mgus2) summary(mgfitrmean2) #>  #> Call: #> rmeanglm(formula = Surv(etime, event) ~ sex + age + hgb, time = 120,  #>     cause = \"pcm\", data = mgus2) #>  #> Coefficients: #>             Estimate Std. Error z value Pr(>|z|) #> (Intercept)  3.98253    3.87360   1.028    0.304 #> sexM        -0.98992    0.99168  -0.998    0.318 #> age          0.04466    0.02941   1.518    0.129 #> hgb         -0.18754    0.25091  -0.747    0.455 #>  #> (Dispersion parameter for quasi family taken to be 1) #>  #>     Null deviance: 448531  on 1370  degrees of freedom #> Residual deviance: 447319  on 1367  degrees of freedom #>   (13 observations deleted due to missingness) #> AIC: NA #>  #> Number of Fisher Scoring iterations: 2 nboot <- 100 # use a bigger number for real bootests <- matrix(NA, nrow = nboot, ncol = 4) for(i in 1:nboot) {   mgus.b <- mgus2[sample(1:nrow(mgus2), replace = TRUE), ]   mgfitrmean.b <- rmeanglm(Surv(etime, event) ~ sex + age + hgb, cause = \"pcm\",                        time = 120, data = mgus.b)   bootests[i,] <- coefficients(mgfitrmean.b) }  se.boot <- sqrt(diag(cov(bootests))) knitr::kable(cbind(se.boot = se.boot,        se.robust = sqrt(diag(vcov(mgfitrmean2))),        #se.corrected = sqrt(diag(vcov(mgfitrmean2, type = \"corrected\"))),        se.naive = sqrt(diag(vcov(mgfitrmean2, type = \"naive\")))), digits = 3) hist(predict(mgfitrmean2, newdata = mgus2),       xlab = \"Predicted lifetime lost due to PCM\", main = \"\") mgus2$prob.pcm10 <- predict(mgfitci2, newdata = mgus2) mgus2$pseudo.ci <- mgfitci$y summary(mgus2$prob.pcm10) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's  #> 0.05169 0.05559 0.05695 0.06348 0.07297 0.07522      13 cutps <- quantile(mgus2$prob.pcm10, seq(.1, .9, by = .1), na.rm = TRUE) mgus2$prob.cut <- cut(mgus2$prob.pcm10,                        cutps)  pred.p <- cutps[-length(cutps)] + diff(cutps) obs.p <- c(by(mgus2$pseudo.ci, mgus2$prob.cut, mean))  plot(obs.p ~ pred.p, xlab = \"predicted\", ylab = \"observed\") abline(0, 1)"},{"path":"https://sachsmc.github.io/eventglm/articles/example-analysis.html","id":"relative-survivalnet-survival","dir":"Articles","previous_headings":"","what":"Relative survival/net survival","title":"Examples of using eventglm and interpreting the results","text":"Following Professor Paul Lambert’s example : https://pclambert.net/software/stpp/using_stpp/ , let’s load datasets: Now estimate marginal relative survival using approach described Pavlič Pohar Perme (2019), based estimator: RS(t)=n−1∑=1nPOi(t)SP(t|D), RS(t) = n^{-1}\\sum_{= 1}^n\\frac{PO_i(t)}{S_{P}(t | D)}, SP(t|D)S_{P}(t | D) survival probability based life tables demographics DD patient ii, POi(t)PO_i(t) pseudo observations time tt. get survival probability merging life table estimates, pseudo observations package. prob life tables probability surviving one year, get probability surviving 5 10 years, need calculate cumulative product estimates. pretty close computed using Pohar Perme estimator reported Prof Lambert.","code":"library(data.table)  # from https://pclambert.net/data/colon.dta colon2 <- rio::import(system.file(\"extdata\", \"colon.dta\", package = \"eventglm\")) colon2$surv_mm_trunc <- ifelse(colon2$surv_mm > 120.5, 120.5, colon2$surv_mm)  colon2$death <- colon2$status %in% c(1, 2) colon2$death[colon2$surv_mm > colon2$surv_mm_trunc] <- 0  # from https://pclambert.net/data/popmort.dta lifetab <- data.table(rio::import(system.file(\"extdata\", \"popmort.dta\", package = \"eventglm\"))) lifetab[, prob.5 := prod(lifetab[`_age` %in% .BY[[\"_age\"]]:(.BY[[\"_age\"]]+4) &                                `_year` %in% .BY[[\"_year\"]]:(.BY[[\"_year\"]]+4) &                                  `_year` == .BY[[\"_year\"]] - .BY[[\"_age\"]] + `_age` &                               sex == .BY[[\"sex\"]] ]$prob, na.rm = TRUE),          by = c(\"sex\", \"_year\", \"_age\")]  lifetab[, prob.10 := prod(lifetab[`_age` %in% .BY[[\"_age\"]]:(.BY[[\"_age\"]]+9) &                                `_year` %in% .BY[[\"_year\"]]:(.BY[[\"_year\"]]+9) &                                  `_year` == .BY[[\"_year\"]] - .BY[[\"_age\"]] + `_age` &                               sex == .BY[[\"sex\"]] ]$prob, na.rm = TRUE),          by = c(\"sex\", \"_year\", \"_age\")]   colon2 <- merge(colon2, lifetab,                  by.x = c(\"sex\", \"yydx\", \"age\"),                  by.y = c(\"sex\",  \"_year\", \"_age\"), all.x = TRUE, all.y = FALSE)  fit1 <- cumincglm(survival::Surv(surv_mm_trunc, death) ~ 1, data = colon2, time = 1 * 12) fit5 <- cumincglm(survival::Surv(surv_mm_trunc, death) ~ 1, data = colon2, time = 5 * 12) fit10 <- cumincglm(survival::Surv(surv_mm_trunc, death) ~ 1, data = colon2, time = 10 * 12)  colon2$po_1 <- 1 - fit1$y colon2$po_5 <- 1 - fit5$y colon2$po_10 <- 1 - fit10$y  knitr::kable(cbind(time = c(1, 5, 10),                     relsurv.pseudo = with(colon2,                                    c(mean(po_1 / prob),                                      mean(po_5 / prob.5),                                      mean(po_10 / prob.10)),                                   ),                    relsurv.pohar = c(0.682, 0.479, 0.441)), digits = 3)"},{"path":"https://sachsmc.github.io/eventglm/articles/example-analysis.html","id":"case-cohort-sampling","dir":"Articles","previous_headings":"","what":"Case cohort sampling","title":"Examples of using eventglm and interpreting the results","text":"Parner, Andersen, Overgaard (2020) describe fit regression models pseudo-observations account case-cohort sampling. sometimes done survival times observed full sample, one covariates costly measure. covariates measured everyone experienced event, plus random subsample remaining individuals. basic idea weighted estimating equations, can implement easily weights argument gets passed glm.fit. First let’s create case-cohort sample colon2 dataset sampling cancer deaths (status == 1) probability 0.8, random subcohort probability 0.1. individuals sampled covariates set missing. Now, weighted regression model give similar results unweighted one full sample: works pseudo observations computed using full sample, can see rawPO element returned objects:","code":"colon2$status2 <- factor(ifelse(colon2$status == 4, 0, colon2$status),                           labels = c(\"censored\", \"cancer death\", \"other death\")) subc <- rbinom(nrow(colon2), size = 1, p = .2) samp.ind <- subc + (1 - subc) * (colon2$status == 1) * rbinom(nrow(colon2), size = 1, p = .9) colon.cc <- colon2 colon.cc[!as.logical(samp.ind), c(\"age\", \"sex\", \"subsite\")] <- NA colon.cc$samp.wt <- 1 / ifelse(colon.cc$status == 1, .2 + .8 * .9, .2) cfit.cc <- cumincglm(Surv(surv_mm, status2) ~ age + sex + factor(subsite),                       cause = \"cancer death\", time = 5 * 12, data = colon.cc,                       weights = samp.wt) cfit.full <- cumincglm(Surv(surv_mm, status2) ~ age + sex + factor(subsite),                       cause = \"cancer death\", time = 5 * 12, data = colon2) knitr::kable(cbind(casecohort = coefficients(cfit.cc),        fullsamp = coefficients(cfit.full)), digits = 3) cfit.cc$rawPO |> mean() #> [1] 0.5306154 cfit.full$rawPO |> mean() #> [1] 0.5306154"},{"path":[]},{"path":"https://sachsmc.github.io/eventglm/articles/extenstions.html","id":"pseudo-observation-computation-modules","dir":"Articles","previous_headings":"","what":"Pseudo observation computation modules","title":"Extending eventglm","text":"version 1.1.0, cumincglm rmeanglm expect argument model.censoring function. function workhorse computation pseudo observations later used generalized linear model. number computation methods built “modules” file called “pseudo-modules.R”. Let us take look example: function, pseudo observation module, must take named arguments (though used), return vector pseudo observations.","code":"eventglm::pseudo_independent #> function (formula, time, cause = 1, data, type = c(\"cuminc\",  #>     \"survival\", \"rmean\"), formula.censoring = NULL, ipcw.method = NULL)  #> { #>     margformula <- update.formula(formula, . ~ 1) #>     mr <- model.response(model.frame(margformula, data = data)) #>     stopifnot(attr(mr, \"type\") %in% c(\"right\", \"mright\")) #>     marginal.estimate <- survival::survfit(margformula, data = data) #>     if (type == \"cuminc\") { #>         POi <- get_pseudo_cuminc(marginal.estimate, time, cause,  #>             mr) #>     } #>     else if (type == \"survival\") { #>         if (marginal.estimate$type != \"right\") { #>             stop(\"Survival estimand not available for outcome with censoring type\",  #>                 marginal.estimate$type) #>         } #>         POi <- 1 - get_pseudo_cuminc(marginal.estimate, time,  #>             cause, mr) #>     } #>     else if (type == \"rmean\") { #>         POi <- get_pseudo_rmean(marginal.estimate, time, cause,  #>             mr) #>     } #>     POi #> } #> <bytecode: 0x59ac00639790> #> <environment: namespace:eventglm>"},{"path":[]},{"path":"https://sachsmc.github.io/eventglm/articles/extenstions.html","id":"example-parametric-pseudo-observations","dir":"Articles","previous_headings":"Custom computation functions","what":"Example: Parametric pseudo observations","title":"Extending eventglm","text":"Let us see define custom function computation pseudo observations. first example, fit parametric survival model survreg marginally jackknife leave one estimates. may useful interval censoring, example. Now let us try passing cumincglm function compare default independence estimator: can also refer function string, omitting “pseudo_” prefix, wish, e.g.,","code":"pseudo_parametric <- function(formula, time, cause = 1, data,                         type = c(\"cuminc\", \"survival\", \"rmean\"),                         formula.censoring = NULL, ipcw.method = NULL){    margformula <- update.formula(formula, . ~ 1)   mr <- model.response(model.frame(margformula, data = data))      marginal.estimate <- survival::survreg(margformula, data = data,                                           dist = \"weibull\")    theta <- pweibull(time, shape = 1 / marginal.estimate$scale,                      scale = exp(marginal.estimate$coefficients[1]))      theta.i <- sapply(1:nrow(data), function(i) {          me <- survival::survreg(margformula, data = data[-i, ], dist = \"weibull\")     pweibull(time, shape = 1 / me$scale,                      scale = exp(me$coefficients[1]))           })      POi <- theta  + (nrow(data) - 1) * (theta - theta.i)   POi  } fitpara <- cumincglm(Surv(time, status) ~ rx + sex + age, time = 2500,                    model.censoring = pseudo_parametric,                    data = colon)  fitdef <- cumincglm(Surv(time, status) ~ rx + sex + age, time = 2500,                    model.censoring = \"independent\",                    data = colon)  knitr::kable(sapply(list(parametric = fitpara, default = fitdef),         coefficients)) fit1 <- cumincglm(Surv(time, status) ~ rx + sex + age, time = 2500,                    model.censoring = \"parametric\",                    data = colon)"},{"path":"https://sachsmc.github.io/eventglm/articles/extenstions.html","id":"example-2-infinitesimal-jackknife","dir":"Articles","previous_headings":"Custom computation functions","what":"Example 2: infinitesimal jackknife","title":"Extending eventglm","text":"survival package version 3.0 released, became possible get influence function values returned estimation functions. efficient influence functions used variance calculations, related pseudo observations. information available “pseudo.Rnw” vignette development version survival. can use feature create custom function infinitesimal jackknife pseudo observations: Note computes pseudo observations survival, rather cumulative incidence, compare can use survival = TRUE option. Now try ","code":"pseudo_infjack2 <- function(formula, time, cause = 1, data,                         type = c(\"cuminc\", \"survival\", \"rmean\"),                         formula.censoring = NULL, ipcw.method = NULL) {      marginal.estimate2 <- survival::survfit(update.formula(formula, . ~ 1),                                              data = data, influence = TRUE)       tdex <- sapply(time, function(x) max(which(marginal.estimate2$time <= x)))       pstate <- marginal.estimate2$surv[tdex]       ## S(t) + (n)[S(t) -S_{-i}(t)]      POi <- matrix(pstate, nrow = marginal.estimate2$n, ncol = length(time), byrow = TRUE) +          (marginal.estimate2$n) *          (marginal.estimate2$influence.surv[, tdex])            POi  } fitinf <- cumincglm(Surv(time, status) ~ rx + sex + age, time = 2500,                    model.censoring = \"infjack2\",                    data = colon)  fitdefsurv <- cumincglm(Surv(time, status) ~ rx + sex + age, time = 2500,                    survival = TRUE,                   data = colon)   knitr::kable(sapply(list(infjack = fitinf, default = fitdefsurv),         coefficients))"},{"path":"https://sachsmc.github.io/eventglm/articles/extenstions.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Extending eventglm","text":"opens lot possibilities future extensions eventglm, also make easier maintain. Try different methods, let us know methods using like use.","code":""},{"path":"https://sachsmc.github.io/eventglm/articles/stata-sas-comparason.html","id":"r-code-and-results","dir":"Articles","previous_headings":"","what":"R code and results","title":"Comparison to other software","text":"","code":"library(eventglm)  colon.cifit <- cumincglm(Surv(time, status) ~ rx, time = 2500, data = colon) summary(colon.cifit) #>  #> Call: #> cumincglm(formula = Surv(time, status) ~ rx, time = 2500, data = colon) #>  #> Coefficients: #>             Estimate Std. Error z value Pr(>|z|)     #> (Intercept)  0.54345    0.02946  18.449  < 2e-16 *** #> rxLev       -0.02907    0.04173  -0.697  0.48596     #> rxLev+5FU   -0.13176    0.04186  -3.148  0.00165 **  #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> (Dispersion parameter for quasi family taken to be 1) #>  #>     Null deviance: 253.10  on 928  degrees of freedom #> Residual deviance: 250.15  on 926  degrees of freedom #> AIC: NA #>  #> Number of Fisher Scoring iterations: 2 confint(colon.cifit) #>                  2.5 %      97.5 % #> (Intercept)  0.4857153  0.60118745 #> rxLev       -0.1108637  0.05271372 #> rxLev+5FU   -0.2137964 -0.04971921"},{"path":"https://sachsmc.github.io/eventglm/articles/stata-sas-comparason.html","id":"stata-code-and-results","dir":"Articles","previous_headings":"","what":"Stata code and results","title":"Comparison to other software","text":"uses st0202_1 package, available : https://www.stata-journal.com/article.html?article=st0202_1","code":". import delimited \"colon.csv\", clear (18 vars, 929 obs)  .  . stset time, failure(status==1)       failure event:  status == 1 obs. time interval:  (0, time]  exit on or before:  failure  ------------------------------------------------------------------------------         929  total observations           0  exclusions ------------------------------------------------------------------------------         929  observations remaining, representing         452  failures in single-record/single-failure data   1,551,389  total analysis time at risk and under observation                                                 at risk from t =         0                                      earliest observed entry t =         0                                           last observed exit t =     3,329  .  . // requires st0202_1 install (search stpci) . stpci, at(2500) Pseudo-observations for the cumulative incidence function. Competing risks: (none). Computing pseudo-observations (progress dots indicate percent completed). ----+--- 1 ---+--- 2 ---+--- 3 ---+--- 4 ---+--- 5  ..................................................    50 ..................................................   100 Generated variable: pseudo.  . tabulate rx, gen(rxdum)           rx |      Freq.     Percent        Cum. ------------+-----------------------------------         Lev |        310       33.37       33.37     Lev+5FU |        304       32.72       66.09         Obs |        315       33.91      100.00 ------------+-----------------------------------       Total |        929      100.00  . glm pseudo rxdum1 rxdum2, vce(robust)  Iteration 0:   log pseudolikelihood =  -708.7556    Generalized linear models                         Number of obs   =        929 Optimization     : ML                             Residual df     =        926                                                   Scale parameter =    .270145 Deviance         =   250.154308                   (1/df) Deviance =    .270145 Pearson          =   250.154308                   (1/df) Pearson  =    .270145  Variance function: V(u) = 1                       [Gaussian] Link function    : g(u) = u                       [Identity]                                                    AIC             =   1.532305 Log pseudolikelihood = -708.7556003               BIC             =   -6078.23  ------------------------------------------------------------------------------              |               Robust       pseudo |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval] -------------+----------------------------------------------------------------       rxdum1 |   -.029075   .0416186    -0.70   0.485    -.1106459    .0524959       rxdum2 |  -.1317578   .0417443    -3.16   0.002    -.2135752   -.0499404        _cons |   .5434514     .02938    18.50   0.000     .4858676    .6010352 ------------------------------------------------------------------------------"},{"path":"https://sachsmc.github.io/eventglm/articles/stata-sas-comparason.html","id":"sas-code-and-results","dir":"Articles","previous_headings":"","what":"SAS code and results","title":"Comparison to other software","text":"Assuming loaded colon data workspace.","code":"proc lifetest data=colon noprint plots=none timelist=2500 reduceout outsurv=sall; time time*status(0); run;  data sall; set sall; theta = survival; keep theta; run;  data sout; set colon; keep id; run;  %macro pseudosurv;  %do ip=1 %to 929; data coloni; set colon; where id ^= &ip; run;  proc lifetest data=coloni noprint plots=none timelist=2500 reduceout outsurv=salli; time time*status(0); run;  data salli; set salli; thetamini = survival; id = &ip; keep id thetamini; run;  data souti; merge salli sall; run;  data sout;  merge sout souti; by id; run; %end; %mend pseudosurv;  %pseudosurv;   data sout2; set sout; pseudoci = 1 - (929 * theta - (929 - 1) * thetamini); run;  data colon2; merge colon sout2; by id; if rx='Lev' then rxlev = 1; else rxlev = 0; if rx='Lev+5FU' then rxlevplus = 1; else rxlevplus = 0; run;  proc reg data = colon2; model pseudoci = rxlev rxlevplus / white; run;"},{"path":"https://sachsmc.github.io/eventglm/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Michael C Sachs. Author, maintainer. Erin E Gabriel. Author. Morten Overgaard. Contributor.           Corrected variance calculation Thomas Gerds. Contributor.           Fast computation leave one cumulative incidence Terry Therneau. Contributor.           Restricted mean computation","code":""},{"path":"https://sachsmc.github.io/eventglm/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Sachs MC, Gabriel EE (2022). “Event History Regression Pseudo-Observations: Computational Approaches Implementation R.” Journal Statistical Software, 102(9), 1–34. doi:10.18637/jss.v102.i09.","code":"@Article{,   title = {Event History Regression with Pseudo-Observations: Computational Approaches and an Implementation in {R}},   author = {Michael C. Sachs and Erin E. Gabriel},   journal = {Journal of Statistical Software},   year = {2022},   volume = {102},   number = {9},   pages = {1--34},   doi = {10.18637/jss.v102.i09}, }"},{"path":"https://sachsmc.github.io/eventglm/index.html","id":"eventglm-regression-models-for-event-history-outcomes","dir":"","previous_headings":"","what":"Regression Models for Event History Outcomes","title":"Regression Models for Event History Outcomes","text":"user friendly, easy understand way event history regression marginal estimands interest, including cumulative incidence restricted mean survival, using pseudo observation framework estimation. interface uses well known formulation generalized linear model allows features including plotting residuals, use sampling weights, corrected variance estimation.","code":""},{"path":"https://sachsmc.github.io/eventglm/index.html","id":"development-status","dir":"","previous_headings":"","what":"Development status","title":"Regression Models for Event History Outcomes","text":"package stable development. interface unlikely major changes time. New features may added changed time.","code":""},{"path":"https://sachsmc.github.io/eventglm/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Regression Models for Event History Outcomes","text":"","code":"install.packages(\"eventglm\") ## or remotes::install_github(\"sachsmc/eventglm\")"},{"path":"https://sachsmc.github.io/eventglm/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Regression Models for Event History Outcomes","text":"main functions users use cumincglm rmeanglm. generalized linear regression models cumulative incidence restricted mean censored time event outcome, without competing risks. models specified just like glm, outcome must call Surv (like coxph), must specify time argument (fixed time cumulative incidence restricted mean computed). Check vignettes examples details.","code":"library(eventglm)  colon.cifit <- cumincglm(Surv(time, status) ~ rx, time = 2500, data = colon) summary(colon.cifit) se.ci <- sqrt(diag(vcov(colon.cifit, type = \"robust\"))) b.ci <- coefficients(colon.cifit)"},{"path":"https://sachsmc.github.io/eventglm/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Regression Models for Event History Outcomes","text":"Sachs MC, Gabriel EE (2022). “Event History Regression Pseudo-Observations: Computational Approaches Implementation R.” Journal Statistical Software, 102(9), 1-34. doi: 10.18637/jss.v102.i09 (URL: https://doi.org/10.18637/jss.v102.i09). Per Kragh Andersen Maja Pohar Perme. Pseudo-observations survival analysis. Statistical Methods Medical Research, 19(1):71–99, February 2010. doi: 10.1177/0962280209105020 (URL: http://journals.sagepub.com/doi/10.1177/0962280209105020)","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/calc_ipcw_pos.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute inverse probability of censoring weights pseudo observations — calc_ipcw_pos","title":"Compute inverse probability of censoring weights pseudo observations — calc_ipcw_pos","text":"Compute inverse probability censoring weights pseudo observations","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/calc_ipcw_pos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute inverse probability of censoring weights pseudo observations — calc_ipcw_pos","text":"","code":"calc_ipcw_pos(mr, time, causen, type, ipcw.method, Gi)"},{"path":"https://sachsmc.github.io/eventglm/reference/calc_ipcw_pos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute inverse probability of censoring weights pseudo observations — calc_ipcw_pos","text":"mr Model response object returned Surv time Max time causen Cause interest (numeric) type Outcome type, \"cuminc\", \"survival\", \"rmean\" ipcw.method \"binder\" \"hajek\" Gi vector estimated censoring probabilities","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/check_mod_cens.html","id":null,"dir":"Reference","previous_headings":"","what":"Error check censoring model — check_mod_cens","title":"Error check censoring model — check_mod_cens","text":"Censoring model must take named arguments predefined modules (though used), return vector pseudo observations.","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/check_mod_cens.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Error check censoring model — check_mod_cens","text":"","code":"check_mod_cens(model.censoring)"},{"path":"https://sachsmc.github.io/eventglm/reference/check_mod_cens.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Error check censoring model — check_mod_cens","text":"model.censoring censoring model specification character function","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/colon.html","id":null,"dir":"Reference","previous_headings":"","what":"Chemotherapy for Stage B/C colon cancer — colon","title":"Chemotherapy for Stage B/C colon cancer — colon","text":"data one first successful trials adjuvant chemotherapy colon cancer. Levamisole low-toxicity compound previously used treat worm infestations animals; 5-FU moderately toxic (things go) chemotherapy agent. one record per patient death outcome (censoring). redistributed survival package, small modification include death outcome.","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/colon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Chemotherapy for Stage B/C colon cancer — colon","text":"","code":"colon"},{"path":"https://sachsmc.github.io/eventglm/reference/colon.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Chemotherapy for Stage B/C colon cancer — colon","text":"data frame 929 rows 17 variables: id id study 1 patients rx Treatment - Obs(ervation), Lev(amisole), Lev(amisole)+5-FU sex 1=male age years obstruct obstruction colon tumour perfor perforation colon adhere adherence nearby organs nodes number lymph nodes detectable cancer time days death censoring status censoring status differ differentiation tumour (1=well, 2=moderate, 3=poor) extent Extent local spread (1=submucosa, 2=muscle, 3=serosa, 4=contiguous structures) surg time surgery registration (0=short, 1=long) node4 4 positive lymph nodes etype event type: 1=recurrence,2=death event event indicator: censored, death","code":""},{"path":[]},{"path":"https://sachsmc.github.io/eventglm/reference/confint.pseudoglm.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence Intervals for pseudoglm Model Parameters — confint.pseudoglm","title":"Confidence Intervals for pseudoglm Model Parameters — confint.pseudoglm","text":"Computes Wald confidence intervals one parameters fitted model. Users can specify type variance estimate used, default robust sandwich variance estimator.","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/confint.pseudoglm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence Intervals for pseudoglm Model Parameters — confint.pseudoglm","text":"","code":"# S3 method for class 'pseudoglm' confint(object, parm, level = 0.95, type = \"robust\", ...)"},{"path":"https://sachsmc.github.io/eventglm/reference/confint.pseudoglm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence Intervals for pseudoglm Model Parameters — confint.pseudoglm","text":"object fitted model object cumincglm rmeanglm parm specification parameters given confidence intervals, either vector numbers vector names. missing, parameters considered. level confidence level required. type type variance estimate use, see vcov.pseudoglm ... used","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/confint.pseudoglm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confidence Intervals for pseudoglm Model Parameters — confint.pseudoglm","text":"matrix (vector) columns giving lower upper confidence limits parameter. labelled (1-level)/2 1 - (1-level)/2 ","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/confint.pseudoglm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Confidence Intervals for pseudoglm Model Parameters — confint.pseudoglm","text":"","code":"cumincipcw <- cumincglm(survival::Surv(etime, event) ~ age + sex,          time = 200, cause = \"pcm\", link = \"identity\",          model.censoring = \"independent\", data = mgus2) confint(cumincipcw) #>                    2.5 %        97.5 % #> (Intercept)  0.118603220  0.3264884927 #> age         -0.003125601 -0.0004437915 #> sexM        -0.043348939  0.0251469048"},{"path":"https://sachsmc.github.io/eventglm/reference/cumincglm.html","id":null,"dir":"Reference","previous_headings":"","what":"Generalized linear models for cumulative incidence — cumincglm","title":"Generalized linear models for cumulative incidence — cumincglm","text":"Using pseudo observations cumulative incidence, function runs generalized linear model estimates parameters representing contrasts cumulative incidence particular set times (specified time argument) across covariate values. link function can \"identity\" estimating differences cumulative incidence, \"log\" estimating ratios, link functions supported quasi.","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/cumincglm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generalized linear models for cumulative incidence — cumincglm","text":"","code":"cumincglm(   formula,   time,   cause = 1,   link = \"identity\",   model.censoring = \"independent\",   formula.censoring = NULL,   ipcw.method = \"binder\",   data,   survival = FALSE,   weights,   subset,   na.action,   offset,   control = list(...),   model = FALSE,   x = TRUE,   y = TRUE,   singular.ok = TRUE,   contrasts = NULL,   id,   ... )"},{"path":"https://sachsmc.github.io/eventglm/reference/cumincglm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generalized linear models for cumulative incidence — cumincglm","text":"formula formula specifying model. left hand side must Surv object specifying right censored survival competing risks outcome. status indicator, normally 0=alive, 1=dead. choices TRUE/FALSE (TRUE = death) 1/2 (2=death). competing risks, event variable factor, whose first level treated censoring. right hand side usual linear combination covariates. multiple time points, special term \"tve(.)\" can used specify effect variable inside parentheses time varying. output represented interaction time points variable. time Numeric vector specifying times cumulative incidence survival probability effect estimates desired. cause Numeric character constant specifying cause indicator interest. link Link function cumulative incidence regression model. model.censoring Type model censoring distribution. Options \"stratified\", computes pseudo-observations stratified set categorical covariates, \"aareg\" Aalen's additive hazards model, \"coxph\" Cox's proportional hazards model. options, assume time event event indicator conditionally independent censoring time, censoring model correctly specified. \"independent\", assume completely independent censoring, .e., time event covariates independent censoring time. censoring time independent covariates model. Can also custom function, see Details \"Extending eventglm\" vignette. formula.censoring one sided formula (e.g., ~ x1 + x2) specifying model censoring distribution. NULL, uses mean model outcome. Missing values covariates censoring model cause error. ipcw.method method use calculation inverse probability censoring weighted pseudo observations. \"binder\" default, uses number observations denominator, \"hajek\" method uses sum weights denominator. data Data frame variables formula can interpreted. survival Set TRUE use survival (one minus cumulative incidence) outcome. available competing risks models. weights optional vector 'prior weights' used fitting process. NULL numeric vector found data. subset optional vector specifying subset observations used fitting process. na.action function indicates happen data contain NAs. default set na.action setting options, na.fail unset. 'factory-fresh' default na.omit. Another possible value NULL, action. Value na.exclude can useful. offset can used specify priori known component included linear predictor fitting. NULL numeric vector length equal number cases. One offset terms can included formula instead well, one specified sum used. See model.offset. length(time) > 1, offset terms must appear formula. control list parameters controlling fitting process. passed glm.control. model logical value indicating whether model frame included component returned value. x logical value indicating whether model matrix used fitting process returned components returned value. y logical value indicating whether response vector (pseudo-observations) used fitting process returned components returned value. singular.ok logical; FALSE singular fit error. contrasts optional list. See contrasts.arg model.matrix.default. id optional integer vector subject identifiers, found data. present, generalized estimating equations used fit model. can used, example, multiple observations per individual represented multiple rows data. ... arguments passed glm.fit","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/cumincglm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generalized linear models for cumulative incidence — cumincglm","text":"pseudoglm object, methods print, summary,   vcov. inherits glm, predict glm methods supported.","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/cumincglm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generalized linear models for cumulative incidence — cumincglm","text":"argument \"model.censoring\" determines pseudo   observations calculated. can name function   function , must arguments \"formula\", \"time\", \"cause\",   \"data\", \"type\", \"formula.censoring\", \"ipcw.method\". name   function, code look function prefix \"pseudo_\"   first, avoid clashes related methods coxph. function   must return vector pseudo observations, one subject   data used subsequent calculations. examples   implementation, see \"pseudo-modules.R\" file, vignette \"Extending   eventglm\".","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/cumincglm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generalized linear models for cumulative incidence — cumincglm","text":"","code":"cumincipcw <- cumincglm(Surv(etime, event) ~ age + sex,          time = 200, cause = \"pcm\", link = \"identity\",          model.censoring = \"independent\", data = mgus2) # stratified on only the categorical covariate      cumincipcw2 <- cumincglm(Surv(etime, event) ~ age + sex,                          time = 200, cause = \"pcm\", link = \"identity\",                          model.censoring = \"stratified\",                          formula.censoring = ~ sex, data = mgus2) # multiple time points cuminct2 <- cumincglm(Surv(etime, event) ~ age + sex,          time = c(50, 100, 200), cause = \"pcm\", link = \"identity\",          model.censoring = \"independent\", data = mgus2)  cuminct3 <- cumincglm(Surv(etime, event) ~ age + tve(sex),          time = c(50, 100, 200), cause = \"pcm\", link = \"identity\",          model.censoring = \"independent\", data = mgus2)"},{"path":"https://sachsmc.github.io/eventglm/reference/eventglm.html","id":null,"dir":"Reference","previous_headings":"","what":"Regression Models for Event History Outcomes — eventglm","title":"Regression Models for Event History Outcomes — eventglm","text":"user friendly, easy understand way event history regression marginal estimands interest, including cumulative incidence restricted mean survival, using pseudo observation framework estimation. interface uses well known formulation generalized linear model allows features including plotting residuals, use sampling weights, corrected variance estimation.","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/eventglm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Regression Models for Event History Outcomes — eventglm","text":"Sachs MC, Gabriel EE (2022). \"Event History Regression Pseudo-Observations: Computational Approaches Implementation R.\" Journal Statistical Software, 102(9), 1-34. <doi:10.18637/jss.v102.i09>","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/get_pseudo_cuminc.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility to get jackknife pseudo observations of cumulative incidence — get_pseudo_cuminc","title":"Utility to get jackknife pseudo observations of cumulative incidence — get_pseudo_cuminc","text":"Utility get jackknife pseudo observations cumulative incidence","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/get_pseudo_cuminc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility to get jackknife pseudo observations of cumulative incidence — get_pseudo_cuminc","text":"","code":"get_pseudo_cuminc(marginal.estimate, time, cause, mr)"},{"path":"https://sachsmc.github.io/eventglm/reference/get_pseudo_cuminc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility to get jackknife pseudo observations of cumulative incidence — get_pseudo_cuminc","text":"marginal.estimate survfit object covariates time Time calculate obs cause cause mr Model response survival object","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/get_pseudo_cuminc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility to get jackknife pseudo observations of cumulative incidence — get_pseudo_cuminc","text":"vector pseudo-observations","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/get_pseudo_rmean.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility to get jackknife pseudo observations of restricted mean — get_pseudo_rmean","title":"Utility to get jackknife pseudo observations of restricted mean — get_pseudo_rmean","text":"Utility get jackknife pseudo observations restricted mean","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/get_pseudo_rmean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility to get jackknife pseudo observations of restricted mean — get_pseudo_rmean","text":"","code":"get_pseudo_rmean(marginal.estimate, time, cause, mr)"},{"path":"https://sachsmc.github.io/eventglm/reference/get_pseudo_rmean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility to get jackknife pseudo observations of restricted mean — get_pseudo_rmean","text":"marginal.estimate survfit object covariates time Time calculate obs cause cause mr Model response survival object","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/get_pseudo_rmean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility to get jackknife pseudo observations of restricted mean — get_pseudo_rmean","text":"vector pseudo-observations","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/jackknife.competing.risks2.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute jackknife pseudo-observations of the cause-specific cumulative incidence for competing risks — jackknife.competing.risks2","title":"Compute jackknife pseudo-observations of the cause-specific cumulative incidence for competing risks — jackknife.competing.risks2","text":"Compute jackknife pseudo-observations cause-specific cumulative incidence competing risks","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/jackknife.competing.risks2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute jackknife pseudo-observations of the cause-specific cumulative incidence for competing risks — jackknife.competing.risks2","text":"","code":"jackknife.competing.risks2(object, times, cause, mr)"},{"path":"https://sachsmc.github.io/eventglm/reference/jackknife.competing.risks2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute jackknife pseudo-observations of the cause-specific cumulative incidence for competing risks — jackknife.competing.risks2","text":"object survfit object, competing events times Times cumulative incidence computed, must length 1 cause Value indicating cause cumulative incidence computed, must match one values available object (see example) mr Model response, result call Surv, matrix two columns: \"time\" (observed follow time) \"status\" (0 = censored, 1, ..., k = event types)","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/jackknife.competing.risks2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute jackknife pseudo-observations of the cause-specific cumulative incidence for competing risks — jackknife.competing.risks2","text":"vector jackknifed pseudo-observations cause-specific cumulative incidence time times","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/jackknife.competing.risks2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute jackknife pseudo-observations of the cause-specific cumulative incidence for competing risks — jackknife.competing.risks2","text":"","code":"sfit.cuminc <- survival::survfit(survival::Surv(etime, event) ~ 1, data = mgus2) mrs <- with(mgus2, Surv(etime, event)) pseudo.obs <- jackknife.competing.risks2(sfit.cuminc, times = 200, cause = \"pcm\", mrs) mean(pseudo.obs) #> [1] 0.09190984 # agrees with summary(sfit.cuminc, times = 200) #> Call: survfit(formula = survival::Surv(etime, event) ~ 1, data = mgus2) #>  #>  time n.risk n.event Pr((s0)) Pr(pcm) Pr(death) #>   200    124     938    0.225  0.0919     0.683"},{"path":"https://sachsmc.github.io/eventglm/reference/jackknife.survival2.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute jackknife pseudo-observations of the survival function — jackknife.survival2","title":"Compute jackknife pseudo-observations of the survival function — jackknife.survival2","text":"Compute jackknife pseudo-observations survival function","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/jackknife.survival2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute jackknife pseudo-observations of the survival function — jackknife.survival2","text":"","code":"jackknife.survival2(object, times, mr)"},{"path":"https://sachsmc.github.io/eventglm/reference/jackknife.survival2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute jackknife pseudo-observations of the survival function — jackknife.survival2","text":"object survfit object, single event (competing risks) times Times survival computed, must length 1 mr Model response, result call Surv, matrix two columns: \"time\" (observed follow time) \"status\" (0 = censored, 1 = event)","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/jackknife.survival2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute jackknife pseudo-observations of the survival function — jackknife.survival2","text":"vector jackknifed estimates survival time times","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/jackknife.survival2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute jackknife pseudo-observations of the survival function — jackknife.survival2","text":"","code":"sfit.surv <- survival::survfit(survival::Surv(time, status) ~ 1, data = colon) mrs <- with(colon, Surv(time, status)) pseudo.obs <- jackknife.survival2(sfit.surv, times = 1000, mrs) mean(pseudo.obs) #> [1] 0.6908327 # agrees with summary(sfit.surv, times = 1000) #> Call: survfit(formula = survival::Surv(time, status) ~ 1, data = colon) #>  #>  time n.risk n.event survival std.err lower 95% CI upper 95% CI #>  1000    641     287    0.691  0.0152        0.662        0.721"},{"path":"https://sachsmc.github.io/eventglm/reference/leaveOneOut.competing.risks.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute jackknife pseudo-observations of the cause-specific cumulative incidence for competing risks — leaveOneOut.competing.risks","title":"Compute jackknife pseudo-observations of the cause-specific cumulative incidence for competing risks — leaveOneOut.competing.risks","text":"version computes times times, restricted mean lifetime lost","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/leaveOneOut.competing.risks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute jackknife pseudo-observations of the cause-specific cumulative incidence for competing risks — leaveOneOut.competing.risks","text":"","code":"leaveOneOut.competing.risks(object, times, cause, mr)"},{"path":"https://sachsmc.github.io/eventglm/reference/leaveOneOut.competing.risks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute jackknife pseudo-observations of the cause-specific cumulative incidence for competing risks — leaveOneOut.competing.risks","text":"object survfit object, competing events times Times cumulative incidence computed, must length 1 cause Value indicating cause cumulative incidence computed, must match one values available object (see example) mr Model response, result call Surv, matrix two columns: \"time\" (observed follow time) \"status\" (0 = censored, 1, ..., k = event types)","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/leaveOneOut.competing.risks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute jackknife pseudo-observations of the cause-specific cumulative incidence for competing risks — leaveOneOut.competing.risks","text":"vector jackknifed values cause-specific cumulative incidence time times","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/leaveOneOut.competing.risks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute jackknife pseudo-observations of the cause-specific cumulative incidence for competing risks — leaveOneOut.competing.risks","text":"","code":"sfit.cuminc <- survival::survfit(survival::Surv(etime, event) ~ 1, data = mgus2) mrs <- with(mgus2, Surv(etime, event)) jackvals <- leaveOneOut.competing.risks(sfit.cuminc, times = 200, cause = \"pcm\", mrs)"},{"path":"https://sachsmc.github.io/eventglm/reference/leaveOneOut.competing.risks2.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute jackknife pseudo-observations of the cause-specific cumulative incidence for competing risks — leaveOneOut.competing.risks2","title":"Compute jackknife pseudo-observations of the cause-specific cumulative incidence for competing risks — leaveOneOut.competing.risks2","text":"Compute jackknife pseudo-observations cause-specific cumulative incidence competing risks","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/leaveOneOut.competing.risks2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute jackknife pseudo-observations of the cause-specific cumulative incidence for competing risks — leaveOneOut.competing.risks2","text":"","code":"leaveOneOut.competing.risks2(object, times, cause, mr)"},{"path":"https://sachsmc.github.io/eventglm/reference/leaveOneOut.competing.risks2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute jackknife pseudo-observations of the cause-specific cumulative incidence for competing risks — leaveOneOut.competing.risks2","text":"object survfit object, competing events times Times cumulative incidence computed, must length 1 cause Value indicating cause cumulative incidence computed, must match one values available object (see example) mr Model response, result call Surv, matrix two columns: \"time\" (observed follow time) \"status\" (0 = censored, 1, ..., k = event types)","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/leaveOneOut.competing.risks2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute jackknife pseudo-observations of the cause-specific cumulative incidence for competing risks — leaveOneOut.competing.risks2","text":"vector jackknifed values cause-specific cumulative incidence time times","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/leaveOneOut.competing.risks2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute jackknife pseudo-observations of the cause-specific cumulative incidence for competing risks — leaveOneOut.competing.risks2","text":"","code":"sfit.cuminc <- survival::survfit(survival::Surv(etime, event) ~ 1, data = mgus2) mrs <- with(mgus2, Surv(etime, event)) jackvals <- leaveOneOut.competing.risks2(sfit.cuminc, times = 200, cause = \"pcm\", mrs)"},{"path":"https://sachsmc.github.io/eventglm/reference/leaveOneOut.survival.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute leave one out jackknife contributions of the survival function — leaveOneOut.survival","title":"Compute leave one out jackknife contributions of the survival function — leaveOneOut.survival","text":"subject, survival function recomputed leaving subject . one calculation observed times, calculation restricted mean","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/leaveOneOut.survival.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute leave one out jackknife contributions of the survival function — leaveOneOut.survival","text":"","code":"leaveOneOut.survival(object, times, mr)"},{"path":"https://sachsmc.github.io/eventglm/reference/leaveOneOut.survival.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute leave one out jackknife contributions of the survival function — leaveOneOut.survival","text":"object survfit object, single event (competing risks) times Compute values observed times including time mr Model response, result call Surv, matrix two columns: \"time\" (observed follow time) \"status\" (0 = censored, 1 = event)","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/leaveOneOut.survival.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute leave one out jackknife contributions of the survival function — leaveOneOut.survival","text":"vector jackknifed values survival time times","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/leaveOneOut.survival.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute leave one out jackknife contributions of the survival function — leaveOneOut.survival","text":"","code":"sfit.surv <- survival::survfit(survival::Surv(time, status) ~ 1, data = colon) mrs <- with(colon, Surv(time, status)) jackvals <- leaveOneOut.survival(sfit.surv, 1000, mrs)"},{"path":"https://sachsmc.github.io/eventglm/reference/leaveOneOut.survival2.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute leave one out jackknife contributions of the survival function — leaveOneOut.survival2","title":"Compute leave one out jackknife contributions of the survival function — leaveOneOut.survival2","text":"subject, survival function recomputed leaving subject . workhorse jackknife.survival2 generally called user.","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/leaveOneOut.survival2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute leave one out jackknife contributions of the survival function — leaveOneOut.survival2","text":"","code":"leaveOneOut.survival2(object, times, mr)"},{"path":"https://sachsmc.github.io/eventglm/reference/leaveOneOut.survival2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute leave one out jackknife contributions of the survival function — leaveOneOut.survival2","text":"object survfit object, single event (competing risks) times Times survival computed, must length 1 mr Model response, result call Surv, matrix two columns: \"time\" (observed follow time) \"status\" (0 = censored, 1 = event)","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/leaveOneOut.survival2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute leave one out jackknife contributions of the survival function — leaveOneOut.survival2","text":"vector jackknifed values survival time times","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/leaveOneOut.survival2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute leave one out jackknife contributions of the survival function — leaveOneOut.survival2","text":"","code":"sfit.surv <- survival::survfit(survival::Surv(time, status) ~ 1, data = colon) mrs <- with(colon, Surv(time, status)) jackvals <- leaveOneOut.survival2(sfit.surv, times = 1000, mrs)"},{"path":"https://sachsmc.github.io/eventglm/reference/match_cause.html","id":null,"dir":"Reference","previous_headings":"","what":"Match cause specification against model response — match_cause","title":"Match cause specification against model response — match_cause","text":"Match cause specification model response","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/match_cause.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match cause specification against model response — match_cause","text":"","code":"match_cause(mr, cause)"},{"path":"https://sachsmc.github.io/eventglm/reference/match_cause.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match cause specification against model response — match_cause","text":"mr model.response returned Surv cause Numeric string indicating cause interest","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/mgus2.html","id":null,"dir":"Reference","previous_headings":"","what":"Monoclonal gammopathy data — mgus2","title":"Monoclonal gammopathy data — mgus2","text":"Natural history 1341 sequential patients monoclonal gammopathy undetermined significance (MGUS). superset mgus data, later point accrual process. dataset redistributed survival package added competing risks event indicator.","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/mgus2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Monoclonal gammopathy data — mgus2","text":"","code":"mgus2"},{"path":"https://sachsmc.github.io/eventglm/reference/mgus2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Monoclonal gammopathy data — mgus2","text":"data frame 1384 observations following 10 variables. id subject identifier age age diagnosis, years sex factor levels F M dxyr year diagnosis hgb hemoglobin creat creatinine mspike size monoclonal serum spike ptime time progression plasma cell         malignancy (PCM) last contact, months pstat occurrence PCM: 0=, 1=yes futime time death last contact, months death occurrence death: 0=, 1=yes etime time either death, pcm, last contact event factor indicating event occurred first","code":""},{"path":[]},{"path":"https://sachsmc.github.io/eventglm/reference/print.pseudoglm.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for pseudoglm — print.pseudoglm","title":"Print method for pseudoglm — print.pseudoglm","text":"Print method pseudoglm","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/print.pseudoglm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for pseudoglm — print.pseudoglm","text":"","code":"# S3 method for class 'pseudoglm' print(x, digits = max(3L, getOption(\"digits\") - 3L), ...)"},{"path":"https://sachsmc.github.io/eventglm/reference/print.pseudoglm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for pseudoglm — print.pseudoglm","text":"x pseudoglm object, returned cumincglm rmeanglm digits Number significant digits ... used","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/print.pseudoglm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print method for pseudoglm — print.pseudoglm","text":"x, invisibly","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/pseudo_aareg.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute censoring weighted pseudo observations — pseudo_aareg","title":"Compute censoring weighted pseudo observations — pseudo_aareg","text":"Assuming censoring depends covariates, pseudo observations calculated inverse probability censoring weighted approach, censoring probabilities estimated using Aalen's additive hazards model.","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/pseudo_aareg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute censoring weighted pseudo observations — pseudo_aareg","text":"","code":"pseudo_aareg(   formula,   time,   cause = 1,   data,   type = c(\"cuminc\", \"survival\", \"rmean\"),   formula.censoring = NULL,   ipcw.method = NULL )"},{"path":"https://sachsmc.github.io/eventglm/reference/pseudo_aareg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute censoring weighted pseudo observations — pseudo_aareg","text":"formula formula specifying outcome model. left hand side must Surv object specifying right censored survival competing risks outcome. status indicator, normally 0=alive, 1=dead. choices TRUE/FALSE (TRUE = death) 1/2 (2=death). competing risks, event variable factor, whose first level treated censoring. right hand side usual linear combination covariates. time Numeric constant specifying time cumulative incidence survival probability effect estimates desired. cause Numeric character constant specifying cause indicator interest. data Data frame variables formula can interpreted. type One \"survival\", \"cuminc\", \"rmean\" formula.censoring right-sided formula specifying variables use model censoring distribution. ipcw.method method use calculation inverse probability censoring weighted pseudo observations. \"binder\" default, uses number observations denominator, \"hajek\" method uses sum weights denominator.","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/pseudo_aareg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute censoring weighted pseudo observations — pseudo_aareg","text":"vector pseudo observations","code":""},{"path":[]},{"path":"https://sachsmc.github.io/eventglm/reference/pseudo_aareg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute censoring weighted pseudo observations — pseudo_aareg","text":"","code":"POi <- pseudo_aareg(Surv(time, status) ~ 1, 1500, cause = 1,   data = colon, type = \"rmean\", formula.censoring = ~ sex + age,   ipcw.method = \"binder\")  mean(POi) #> [1] 1180.513"},{"path":"https://sachsmc.github.io/eventglm/reference/pseudo_coxph.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute censoring weighted pseudo observations — pseudo_coxph","title":"Compute censoring weighted pseudo observations — pseudo_coxph","text":"Assuming censoring depends covariates, pseudo observations calculated inverse probability censoring weighted approach, censoring probabilities estimated using Cox's proportional hazards model.","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/pseudo_coxph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute censoring weighted pseudo observations — pseudo_coxph","text":"","code":"pseudo_coxph(   formula,   time,   cause = 1,   data,   type = c(\"cuminc\", \"survival\", \"rmean\"),   formula.censoring = NULL,   ipcw.method = NULL )"},{"path":"https://sachsmc.github.io/eventglm/reference/pseudo_coxph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute censoring weighted pseudo observations — pseudo_coxph","text":"formula formula specifying outcome model. left hand side must Surv object specifying right censored survival competing risks outcome. status indicator, normally 0=alive, 1=dead. choices TRUE/FALSE (TRUE = death) 1/2 (2=death). competing risks, event variable factor, whose first level treated censoring. right hand side usual linear combination covariates. time Numeric constant specifying time cumulative incidence survival probability effect estimates desired. cause Numeric character constant specifying cause indicator interest. data Data frame variables formula can interpreted. type One \"survival\", \"cuminc\", \"rmean\" formula.censoring right-sided formula specifying variables use model censoring distribution. ipcw.method method use calculation inverse probability censoring weighted pseudo observations. \"binder\" default, uses number observations denominator, \"hajek\" method uses sum weights denominator.","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/pseudo_coxph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute censoring weighted pseudo observations — pseudo_coxph","text":"vector pseudo observations","code":""},{"path":[]},{"path":"https://sachsmc.github.io/eventglm/reference/pseudo_coxph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute censoring weighted pseudo observations — pseudo_coxph","text":"","code":"POi <- pseudo_coxph(Surv(time, status) ~ 1, 1500, cause = 1,   data = colon, type = \"survival\", formula.censoring = ~ sex + age,   ipcw.method = \"hajek\")  mean(POi) #> [1] 0.5980773"},{"path":"https://sachsmc.github.io/eventglm/reference/pseudo_independent.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute pseudo observations under independent censoring — pseudo_independent","title":"Compute pseudo observations under independent censoring — pseudo_independent","text":"Assuming completely independent censoring, .e., censoring depend survival time covariates model, pseudo observations calculated standard jackknife approach","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/pseudo_independent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute pseudo observations under independent censoring — pseudo_independent","text":"","code":"pseudo_independent(   formula,   time,   cause = 1,   data,   type = c(\"cuminc\", \"survival\", \"rmean\"),   formula.censoring = NULL,   ipcw.method = NULL )"},{"path":"https://sachsmc.github.io/eventglm/reference/pseudo_independent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute pseudo observations under independent censoring — pseudo_independent","text":"formula formula specifying model. left hand side must Surv object specifying right censored survival competing risks outcome. status indicator, normally 0=alive, 1=dead. choices TRUE/FALSE (TRUE = death) 1/2 (2=death). competing risks, event variable factor, whose first level treated censoring. right hand side usual linear combination covariates. time Numeric constant specifying time cumulative incidence survival probability effect estimates desired. cause Numeric character constant specifying cause indicator interest. data Data frame variables formula can interpreted. type One \"survival\", \"cuminc\", \"rmean\" formula.censoring used method, see pseudo_stratified, pseudo_aareg pseudo_coxph ipcw.method used method","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/pseudo_independent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute pseudo observations under independent censoring — pseudo_independent","text":"vector jackknife pseudo observations","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/pseudo_independent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute pseudo observations under independent censoring — pseudo_independent","text":"","code":"POi <- pseudo_independent(Surv(time, status) ~ 1, 1500, cause = 1, data = colon, type = \"survival\") mean(POi) #> [1] 0.5980774"},{"path":"https://sachsmc.github.io/eventglm/reference/pseudo_infjack.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute infinitesimal jackknife pseudo observations — pseudo_infjack","title":"Compute infinitesimal jackknife pseudo observations — pseudo_infjack","text":"Assuming censoring depends covariates finite set levels, pseudo observations calculated infinitesimal jackknife approach stratified covariates. covariates specified censoring model, pseudo observations calculated completely independent censoring assumption. function allows survival objects entry exit times, thus multi-state models, recurrent events, delayed entry/left truncation. delayed entry, pseudo observation approach theoretically works assumption entry time independent covariates.","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/pseudo_infjack.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute infinitesimal jackknife pseudo observations — pseudo_infjack","text":"","code":"pseudo_infjack(   formula,   time,   cause = 1,   data,   type = c(\"cuminc\", \"survival\", \"rmean\"),   formula.censoring = NULL,   ipcw.method = NULL )"},{"path":"https://sachsmc.github.io/eventglm/reference/pseudo_infjack.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute infinitesimal jackknife pseudo observations — pseudo_infjack","text":"formula formula specifying outcome model. left hand side must Surv object specifying right censored survival, competing risks, counting process, multistate outcome. status indicator, normally 0=alive, 1=dead. choices TRUE/FALSE (TRUE = death) 1/2 (2=death). competing risks multi state models, event variable factor, whose first level treated censoring. right hand side usual linear combination covariates. time Numeric constant specifying time cumulative incidence survival probability effect estimates desired. cause Numeric character constant specifying cause indicator interest. data Data frame variables formula can interpreted. type One \"survival\", \"cuminc\", \"rmean\" formula.censoring optional right-sided formula specifying variables stratify . variables formula must categorical. ipcw.method used method","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/pseudo_infjack.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute infinitesimal jackknife pseudo observations — pseudo_infjack","text":"vector pseudo observations","code":""},{"path":[]},{"path":"https://sachsmc.github.io/eventglm/reference/pseudo_infjack.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute infinitesimal jackknife pseudo observations — pseudo_infjack","text":"","code":"POi <- pseudo_infjack(Surv(time, status) ~ 1, 1500, cause = 1,   data = colon, type = \"survival\", formula.censoring = ~ sex)  mean(POi) #> [1] 0.5801007"},{"path":"https://sachsmc.github.io/eventglm/reference/pseudo_rmst2.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute pseudo-observations for the restricted mean survival — pseudo_rmst2","title":"Compute pseudo-observations for the restricted mean survival — pseudo_rmst2","text":"Compute pseudo-observations restricted mean survival","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/pseudo_rmst2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute pseudo-observations for the restricted mean survival — pseudo_rmst2","text":"","code":"pseudo_rmst2(sfit, jacks, times, tmax, type = \"cuminc\")"},{"path":"https://sachsmc.github.io/eventglm/reference/pseudo_rmst2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute pseudo-observations for the restricted mean survival — pseudo_rmst2","text":"sfit survfit object jacks matrix leave-one-jackknife values, subjects rows, times columns times Times survival calculated tmax Max time type \"cuminc\" \"survival\"","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/pseudo_rmst2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute pseudo-observations for the restricted mean survival — pseudo_rmst2","text":"vector pseudo observations restricted mean lifetime lost","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/pseudo_stratified.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute pseudo observations using stratified jackknife — pseudo_stratified","title":"Compute pseudo observations using stratified jackknife — pseudo_stratified","text":"Assuming censoring depends covariates finite set levels, pseudo observations calculated jackknife approach stratified covariates.","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/pseudo_stratified.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute pseudo observations using stratified jackknife — pseudo_stratified","text":"","code":"pseudo_stratified(   formula,   time,   cause = 1,   data,   type = c(\"cuminc\", \"survival\", \"rmean\"),   formula.censoring = NULL,   ipcw.method = NULL )"},{"path":"https://sachsmc.github.io/eventglm/reference/pseudo_stratified.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute pseudo observations using stratified jackknife — pseudo_stratified","text":"formula formula specifying model. left hand side must Surv object specifying right censored survival competing risks outcome. status indicator, normally 0=alive, 1=dead. choices TRUE/FALSE (TRUE = death) 1/2 (2=death). competing risks, event variable factor, whose first level treated censoring. right hand side usual linear combination covariates. time Numeric constant specifying time cumulative incidence survival probability effect estimates desired. cause Numeric character constant specifying cause indicator interest. data Data frame variables formula can interpreted. type One \"survival\", \"cuminc\", \"rmean\" formula.censoring right-sided formula specifying variables stratify . variables formula must categorical. ipcw.method used method","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/pseudo_stratified.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute pseudo observations using stratified jackknife — pseudo_stratified","text":"vector jackknife pseudo observations","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/pseudo_stratified.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute pseudo observations using stratified jackknife — pseudo_stratified","text":"","code":"POi <- pseudo_stratified(Surv(time, status) ~ 1, 1500, cause = 1,   data = colon, formula.censoring = ~ sex, type = \"rmean\") mean(POi) #> [1] 1180.518"},{"path":"https://sachsmc.github.io/eventglm/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. survival Surv","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/residuals.pseudoglm.html","id":null,"dir":"Reference","previous_headings":"","what":"Pseudo-observation scaled residuals — residuals.pseudoglm","title":"Pseudo-observation scaled residuals — residuals.pseudoglm","text":"Computes residuals according recommendations Pohar-Perme Andersen (2009) <doi: 10.1002/sim.3401>.","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/residuals.pseudoglm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pseudo-observation scaled residuals — residuals.pseudoglm","text":"","code":"# S3 method for class 'pseudoglm' residuals(object, type = NULL, ...)"},{"path":"https://sachsmc.github.io/eventglm/reference/residuals.pseudoglm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pseudo-observation scaled residuals — residuals.pseudoglm","text":"object pseudoglm object, returned cumincglm rmeanglm type Either \"scaled\" (default cumulative incidence outcomes) one types available residuals.glm restricted mean outcomes, default \"deviance\". ... Arguments passed residuals.glm.","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/residuals.pseudoglm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pseudo-observation scaled residuals — residuals.pseudoglm","text":"numeric vector residuals","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/residuals.pseudoglm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Pseudo-observation scaled residuals — residuals.pseudoglm","text":"scaled residuals computed $$\\hat{\\epsilon}_i =   \\frac{\\hat{E}(V_i) - \\hat{Y}_i}{\\sqrt{\\hat{Y}_i (1 - \\hat{Y}_i)}}$$   outcome cumulative incidence, denominator corresponds   estimate standard error conditional estimate outcome   absence censoring. restricted mean, rescaling   done computation passed residuals.glm.","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/residuals.pseudoglm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Pseudo-observation scaled residuals — residuals.pseudoglm","text":"Perme MP, Andersen PK. Checking hazard regression models using   pseudo-observations. Stat Med. 2008;27(25):5309-5328.   <doi:10.1002/sim.3401>","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/rmeanglm.html","id":null,"dir":"Reference","previous_headings":"","what":"Generalized linear models for the restricted mean survival — rmeanglm","title":"Generalized linear models for the restricted mean survival — rmeanglm","text":"Using pseudo observations restricted mean, restricted mean lifetime lost competing risks case, function runs generalized linear model estimate associations restricted mean/lifetime lost particular time (specified time argument) covariates. link function can \"identity\" estimating differences restricted mean, \"log\" estimating ratios, link functions supported quasi.","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/rmeanglm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generalized linear models for the restricted mean survival — rmeanglm","text":"","code":"rmeanglm(   formula,   time,   cause = 1,   link = \"identity\",   model.censoring = \"independent\",   formula.censoring = NULL,   ipcw.method = \"binder\",   data,   weights,   subset,   na.action,   offset,   control = list(...),   model = FALSE,   x = TRUE,   y = TRUE,   singular.ok = TRUE,   contrasts = NULL,   id,   ... )"},{"path":"https://sachsmc.github.io/eventglm/reference/rmeanglm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generalized linear models for the restricted mean survival — rmeanglm","text":"formula formula specifying model. left hand side must Surv object specifying right censored survival competing risks outcome. status indicator, normally 0=alive, 1=dead. choices TRUE/FALSE (TRUE = death) 1/2 (2=death). competing risks, event variable factor, whose first level treated censoring. right hand side usual linear combination covariates. time Numeric constant specifying time restricted mean effect estimates desired. cause Numeric character constant specifying cause indicator interest. link Link function restricted mean regression model. model.censoring Type model censoring distribution. Options \"stratified\", computes pseudo-observations stratified set categorical covariates, \"aareg\" Aalen's additive hazards model, \"coxph\" Cox's proportional hazards model. options, assume time event event indicator conditionally independent censoring time, censoring model correctly specified. \"independent\", assume completely independent censoring, .e., time event covariates independent censoring time. censoring time independent covariates model. Can also custom function, see Details \"Extending eventglm\" vignette. formula.censoring one sided formula (e.g., ~ x1 + x2) specifying model censoring distribution. NULL, uses mean model outcome. Missing values covariates censoring model cause error. ipcw.method method use calculation inverse probability censoring weighted pseudo observations. \"binder\" default, uses number observations denominator, \"hajek\" method uses sum weights denominator. data Data frame variables formula can interpreted. weights optional vector 'prior weights' used fitting process. NULL numeric vector. subset optional vector specifying subset observations used fitting process. na.action function indicates happen data contain NAs. default set na.action setting options, na.fail unset. 'factory-fresh' default na.omit. Another possible value NULL, action. Value na.exclude can useful. offset can used specify priori known component included linear predictor fitting. NULL numeric vector length equal number cases. One offset terms can included formula instead well, one specified sum used. See model.offset. control list parameters controlling fitting process. passed glm.control. model logical value indicating whether model frame included component returned value. x logical value indicating whether model matrix used fitting process returned components returned value. y logical value indicating whether response vector (pseudo-observations) used fitting process returned components returned value. singular.ok logical; FALSE singular fit error. contrasts optional list. See contrasts.arg model.matrix.default. id optional integer vector subject identifiers, found data. present, generalized estimating equations used fit model. can used, example, multiple observations per individual represented multiple rows data. ... arguments passed glm.fit","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/rmeanglm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generalized linear models for the restricted mean survival — rmeanglm","text":"pseudoglm object, methods print, summary,   vcov. inherits glm, predict glm methods supported.","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/rmeanglm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generalized linear models for the restricted mean survival — rmeanglm","text":"argument \"model.censoring\" determines pseudo observations calculated. can name function function , must arguments \"formula\", \"time\", \"cause\", \"data\", \"type\", \"formula.censoring\", \"ipcw.method\". name function, code look function prefix \"pseudo_\" first, avoid clashes related methods coxph. function must return vector pseudo observations, one subject data used subsequent calculations. examples implementation, see \"pseudo-modules.R\" file, vignette \"Extending eventglm\".","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/rmeanglm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generalized linear models for the restricted mean survival — rmeanglm","text":"","code":"rmeanipcw <- rmeanglm(Surv(etime, event) ~ age + sex,          time = 200, cause = \"pcm\", link = \"identity\",          model.censoring = \"independent\", data = mgus2) # stratified on only the categorical covariate      rmeanipcw2 <- rmeanglm(Surv(etime, event) ~ age + sex,                          time = 200, cause = \"pcm\", link = \"identity\",                          model.censoring = \"stratified\",                          formula.censoring = ~ sex, data = mgus2)"},{"path":"https://sachsmc.github.io/eventglm/reference/summary.pseudoglm.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary method — summary.pseudoglm","title":"Summary method — summary.pseudoglm","text":"Summary method","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/summary.pseudoglm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary method — summary.pseudoglm","text":"","code":"# S3 method for class 'pseudoglm' summary(   object,   correlation = FALSE,   symbolic.cor = FALSE,   type = \"robust\",   ... )"},{"path":"https://sachsmc.github.io/eventglm/reference/summary.pseudoglm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary method — summary.pseudoglm","text":"object pseudoglm object, returned cumincglm rmeanglm correlation logical; TRUE, correlation matrix estimated parameters returned printed. symbolic.cor logical; TRUE, print correlations symbolic form rather numbers. type method use variance estimation; one \"corrected\", \"robust\", \"naive\", \"cluster\" ... used","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/summary.pseudoglm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary method — summary.pseudoglm","text":"object class summary.glm","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/vcov.pseudoglm.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute covariance matrix of regression coefficient estimates — vcov.pseudoglm","title":"Compute covariance matrix of regression coefficient estimates — vcov.pseudoglm","text":"Compute covariance matrix regression coefficient estimates","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/vcov.pseudoglm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute covariance matrix of regression coefficient estimates — vcov.pseudoglm","text":"","code":"# S3 method for class 'pseudoglm' vcov(object, type = \"robust\", ...)"},{"path":"https://sachsmc.github.io/eventglm/reference/vcov.pseudoglm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute covariance matrix of regression coefficient estimates — vcov.pseudoglm","text":"object pseudoglm object, returned cumincglm rmeanglm. type method use variance estimation; one \"corrected\", \"robust\", \"naive\", \"cluster\" ... used","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/vcov.pseudoglm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute covariance matrix of regression coefficient estimates — vcov.pseudoglm","text":"numeric matrix containing variance-covariance estimates","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/vcov.pseudoglm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute covariance matrix of regression coefficient estimates — vcov.pseudoglm","text":"\"corrected\" variance estimate cumulative incidence   described Overgaard et al. (2017) <doi:10.1214/16-AOS1516>, code   adapted Overgaard's Stata program. method handle ties   marginal benefits reasonable sample sizes. default   \"robust\" uses sandwich estimator vcovHC implemented   sandwich package. \"cluster\" another option clustered   observations uses vcovCL function sandwich. Finally \"naive\"   uses method glm compute variance, known   anti-conservative. bootstrap another recommended option can   implemented using tools; example vignette.","code":""},{"path":"https://sachsmc.github.io/eventglm/reference/vcov.pseudoglm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute covariance matrix of regression coefficient estimates — vcov.pseudoglm","text":"Overgaard, Morten; Parner, Erik Thorlund; Pedersen, Jan.   Asymptotic theory generalized estimating equations based jack-knife   pseudo-observations. Ann. Statist. 45 (2017), . 5, 1988–2015.   <doi:10.1214/16-AOS1516>.","code":""},{"path":[]},{"path":"https://sachsmc.github.io/eventglm/news/index.html","id":"eventglm-145","dir":"Changelog","previous_headings":"","what":"eventglm 1.4.5","title":"eventglm 1.4.5","text":"Bug fixes: Binder IPCW method calculated correctly. impacted intercept (hence predictions), coefficient estimates always consistent. Now predictions intercept also work correctly. (Thanks @alexpate30)","code":""},{"path":"https://sachsmc.github.io/eventglm/news/index.html","id":"eventglm-144","dir":"Changelog","previous_headings":"","what":"eventglm 1.4.4","title":"eventglm 1.4.4","text":"Bug fixes: Handle cases last observation event leading NaN (thanks @trinhdhk)","code":""},{"path":"https://sachsmc.github.io/eventglm/news/index.html","id":"eventglm-142","dir":"Changelog","previous_headings":"","what":"eventglm 1.4.2","title":"eventglm 1.4.2","text":"Bug fixes: Fixed case-cohort sampling example thanks @tagteam","code":""},{"path":"https://sachsmc.github.io/eventglm/news/index.html","id":"eventglm-141","dir":"Changelog","previous_headings":"","what":"eventglm 1.4.1","title":"eventglm 1.4.1","text":"Bug fixes: Handle missing data correctly gee.fit/multiple time points","code":""},{"path":"https://sachsmc.github.io/eventglm/news/index.html","id":"eventglm-140","dir":"Changelog","previous_headings":"","what":"eventglm 1.4.0","title":"eventglm 1.4.0","text":"New features: New pseudo module infinitesimal jackknife allows delayed entry/left truncation.","code":""},{"path":"https://sachsmc.github.io/eventglm/news/index.html","id":"eventglm-130","dir":"Changelog","previous_headings":"","what":"eventglm 1.3.0","title":"eventglm 1.3.0","text":"New features: Allow id argument cumincglm rmeanglm. id present, geese.fit used instead glm.fit, clusters indicated id. account clustered data, example. Informative error message missing data censoring model","code":""},{"path":"https://sachsmc.github.io/eventglm/news/index.html","id":"eventglm-122","dir":"Changelog","previous_headings":"","what":"eventglm 1.2.2","title":"eventglm 1.2.2","text":"CRAN release: 2022-04-26 Add references JSS publication","code":""},{"path":"https://sachsmc.github.io/eventglm/news/index.html","id":"eventglm-121","dir":"Changelog","previous_headings":"","what":"eventglm 1.2.1","title":"eventglm 1.2.1","text":"CRAN release: 2021-06-01 Remove tidyverse lifecycle badge","code":""},{"path":"https://sachsmc.github.io/eventglm/news/index.html","id":"eventglm-120","dir":"Changelog","previous_headings":"","what":"eventglm 1.2.0","title":"eventglm 1.2.0","text":"New features: Time vector allowed cumincglm. Use model multiple timepoints simultaneously, allow time varying covariate effects using tve() (time varying effect) right side formula.  Inverse probability censoring weights returned fitting functions list element called “ipcw.weights”. * Small edits improvements documentation.","code":""},{"path":"https://sachsmc.github.io/eventglm/news/index.html","id":"eventglm-111","dir":"Changelog","previous_headings":"","what":"eventglm 1.1.1","title":"eventglm 1.1.1","text":"Bug fixes: Check fix name clashes reserved variables pseudo.vals, .Tci, .Ci Minor efficiency updates corrected covariance estimation Improve documentation","code":""},{"path":"https://sachsmc.github.io/eventglm/news/index.html","id":"eventglm-110","dir":"Changelog","previous_headings":"","what":"eventglm 1.1.0","title":"eventglm 1.1.0","text":"New features vignette: Methods computing pseudo observations now modules. Users can define modules computing pseudo observations Option use survival instead cumulative incidence standard models","code":""},{"path":"https://sachsmc.github.io/eventglm/news/index.html","id":"eventglm-102","dir":"Changelog","previous_headings":"","what":"eventglm 1.0.2","title":"eventglm 1.0.2","text":"CRAN release: 2020-11-10 Update tests/jackknife-agree.R tolerance based comparison rather floating point comparison","code":""},{"path":"https://sachsmc.github.io/eventglm/news/index.html","id":"eventglm-101","dir":"Changelog","previous_headings":"","what":"eventglm 1.0.1","title":"eventglm 1.0.1","text":"CRAN release: 2020-11-06 fix typos add reference DESCRIPTION","code":""},{"path":"https://sachsmc.github.io/eventglm/news/index.html","id":"eventglm-100","dir":"Changelog","previous_headings":"","what":"eventglm 1.0.0","title":"eventglm 1.0.0","text":"Initial release","code":""}]
